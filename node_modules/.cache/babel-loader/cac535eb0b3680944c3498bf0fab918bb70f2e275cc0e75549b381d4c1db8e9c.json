{"ast":null,"code":"var _jsxFileName = \"/Users/matsumotoyuudai/Desktop/training/react18/react18-explanation-react18-2/src/components/ReactQuery.tsx\";\nimport { AlbumList } from \"./AlbumList\";\nimport { Sidebar } from \"./Sidebar\";\nimport { TodoList } from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReactQuery = () => {\n  // const { data } = useQuery<Album[]>(['albums'], fetchAlbum);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(AlbumList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = ReactQuery;\nvar _c;\n$RefreshReg$(_c, \"ReactQuery\");","map":{"version":3,"names":["AlbumList","Sidebar","TodoList","jsxDEV","_jsxDEV","ReactQuery","style","display","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","_c","$RefreshReg$"],"sources":["/Users/matsumotoyuudai/Desktop/training/react18/react18-explanation-react18-2/src/components/ReactQuery.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\"\nimport axios from \"axios\"\nimport { AlbumList } from \"./AlbumList\";\nimport { Sidebar } from \"./Sidebar\";\nimport { TodoList } from \"./TodoList\";\n\n\nexport const ReactQuery = () => {\n    // const { data } = useQuery<Album[]>(['albums'], fetchAlbum);\n\n    return (\n        <div style={{ display: 'flex', padding: '16px' }}>\n            {/* <p>React Query</p> */}\n            {/* {data?.map((album) => <p key={album.id}>{album.title}</p>)} */}\n            <Sidebar />\n            <div style={{ flexGrow: 1 }}>\n                <AlbumList />\n                <TodoList />\n            </div>\n        </div>\n    )\n}"],"mappings":";AAEA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B;;EAEA,oBACID,OAAA;IAAKE,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAG7CL,OAAA,CAACH,OAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACXT,OAAA;MAAKE,KAAK,EAAE;QAAEQ,QAAQ,EAAE;MAAE,CAAE;MAAAL,QAAA,gBACxBL,OAAA,CAACJ,SAAS;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACbT,OAAA,CAACF,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAE,EAAA,GAdYV,UAAU;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}